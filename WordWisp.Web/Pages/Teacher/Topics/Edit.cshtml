@page "/teacher/topics/{id:int}/edit"
@model EditTopicModel
@{
    ViewData["Title"] = "Редактировать топик";
}

@section Styles {
    <link rel="stylesheet" href="~/css/variables.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/base.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/forms.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/topics.css" asp-append-version="true" />
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="form-container">
                <div class="form-header">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/teacher/topics">Мои топики</a></li>
                            @if (Model.Topic != null)
                            {
                                <li class="breadcrumb-item"><a href="/teacher/topics/@Model.Topic.Id">@Model.Topic.Title</a></li>
                            }
                            <li class="breadcrumb-item active">Редактирование</li>
                        </ol>
                    </nav>
                    
                    <h2>
                        <i class="bi bi-pencil"></i> Редактировать топик
                    </h2>
                    @if (Model.Topic != null)
                    {
                        <p class="text-muted">Обновите информацию о топике "@Model.Topic.Title"</p>
                    }
                </div>

                <div class="form-body">
                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle"></i> @Model.ErrorMessage
                        </div>
                    }

                    @if (Model.Topic != null)
                    {
                        <form method="post">
                            <div asp-validation-summary="All" class="text-danger mb-3"></div>

                            <div class="form-group">
                                <label asp-for="Input.Title" class="form-label">
                                    Название топика *
                                </label>
                                <input asp-for="Input.Title" class="form-control" placeholder="Введите название топика" />
                                <span asp-validation-for="Input.Title" class="text-danger"></span>
                                <small class="form-text text-muted">
                                    Краткое и понятное название для вашего топика
                                </small>
                            </div>

                            <div class="form-group">
                                <label asp-for="Input.Description" class="form-label">
                                    Описание
                                </label>
                                <textarea asp-for="Input.Description" class="form-control" rows="4" 
                                          placeholder="Опишите содержание топика, цели обучения и что студенты изучат..."></textarea>
                                <span asp-validation-for="Input.Description" class="text-danger"></span>
                                <small class="form-text text-muted">
                                    Подробное описание поможет студентам понять содержание топика
                                </small>
                            </div>

                            <div class="form-group">
                                <div class="form-check">
                                    <input asp-for="Input.IsPublic" class="form-check-input" type="checkbox" />
                                    <label asp-for="Input.IsPublic" class="form-check-label">
                                        Сделать топик публичным
                                    </label>
                                </div>
                                <small class="form-text text-muted">
                                    Публичные топики видны всем студентам. Приватные топики видны только вам.
                                </small>
                            </div>

                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check-circle"></i> Сохранить изменения
                                </button>
                                <a href="/teacher/topics/@Model.Topic.Id" class="btn btn-secondary">
                                    <i class="bi bi-arrow-left"></i> Отмена
                                </a>
                                <button type="button" class="btn btn-outline-danger" onclick="confirmDelete(@Model.Topic.Id, '@Model.Topic.Title')">
                                    <i class="bi bi-trash"></i> Удалить топик
                                </button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Загрузка...</span>
                            </div>
                            <p class="mt-3">Загрузка топика...</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Информационная панель -->
            @if (Model.Topic != null)
            {
                <div class="info-panel mt-4">
                    <h5><i class="bi bi-info-circle"></i> Информация о топике</h5>
                    <div class="info-grid">
                        <div class="info-item">
                            <strong>Создан:</strong>
                            <span>@Model.Topic.CreatedAt.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("ru-RU"))</span>
                        </div>
                        <div class="info-item">
                            <strong>Материалов:</strong>
                            <span>@Model.Topic.MaterialsCount</span>
                        </div>
                        <div class="info-item">
                            <strong>Упражнений:</strong>
                            <span>@Model.Topic.ExercisesCount</span>
                        </div>
                        <div class="info-item">
                            <strong>Статус:</strong>
                            <span class="@(Model.Topic.IsPublic ? "text-success" : "text-secondary")">
                                @(Model.Topic.IsPublic ? "Публичный" : "Приватный")
                            </span>
                        </div>
                    </div>
                    
                    <div class="quick-actions mt-3">
                        <a href="/teacher/topics/@Model.Topic.Id" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-eye"></i> Просмотр
                        </a>
                        <a href="/teacher/topics/@Model.Topic.Id/materials" class="btn btn-outline-info btn-sm">
                            <i class="bi bi-file-earmark-text"></i> Материалы
                        </a>
                        <a href="/teacher/topics/@Model.Topic.Id/exercises" class="btn btn-outline-success btn-sm">
                            <i class="bi bi-puzzle"></i> Упражнения
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Модальное окно подтверждения удаления -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Подтверждение удаления</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Вы уверены, что хотите удалить топик <strong id="topicTitle"></strong>?</p>
                <p class="text-danger">
                    <i class="bi bi-exclamation-triangle"></i>
                    Это действие нельзя отменить. Все материалы и упражнения в этом топике также будут удалены.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="bi bi-trash"></i> Удалить
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let topicIdToDelete = null;

        function confirmDelete(topicId, topicTitle) {
            topicIdToDelete = topicId;
            document.getElementById('topicTitle').textContent = topicTitle;
            
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        document.getElementById('confirmDeleteBtn').addEventListener('click', async function() {
            if (!topicIdToDelete) return;

            const token = '@Model.AuthToken';
            if (!token) {
                alert('Сессия истекла. Пожалуйста, войдите в систему заново.');
                window.location.href = '/auth/login';
                return;
            }

            try {
                const apiBaseUrl = "http://localhost:5118";
                const response = await fetch(`${apiBaseUrl}/api/topics/${topicIdToDelete}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    sessionStorage.setItem('successMessage', 'Топик успешно удален');
                    window.location.href = '/teacher/topics';
                } else if (response.status === 401) {
                    alert('Сессия истекла. Пожалуйста, войдите в систему заново.');
                    window.location.href = '/auth/login';
                } else {
                    let errorMessage = 'Ошибка при удалении топика';
                    try {
                        const contentType = response.headers.get('content-type');
                        if (contentType && contentType.includes('application/json')) {
                            const errorData = await response.json();
                            errorMessage = errorData.message || errorMessage;
                        }
                    } catch (parseError) {
                        console.warn('Could not parse error response:', parseError);
                    }
                    alert(errorMessage);
                }
            } catch (error) {
                console.error('Delete error:', error);
                alert('Не удалось подключиться к серверу');
            }

            const modal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
            modal.hide();
        });
    </script>
    
    <partial name="_ValidationScriptsPartial" />
}
