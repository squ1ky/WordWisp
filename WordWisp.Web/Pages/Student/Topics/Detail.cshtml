@page "/student/topics/{id:int}"
@model StudentTopicDetailModel
@using WordWisp.Web.Models.Enums
@{
    ViewData["Title"] = Model.Topic?.Title ?? "Топик";
}

@section Styles {
    <link rel="stylesheet" href="~/css/variables.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/base.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/topic-detail.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/materials.css" asp-append-version="true" />
}

<div class="container">
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle"></i> @Model.ErrorMessage
        </div>
    }

    @if (Model.Topic != null)
    {
        <!-- Заголовок топика -->
        <div class="topic-header">
            <div class="header-content">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/student/topics">Топики</a></li>
                        <li class="breadcrumb-item active">@Model.Topic.Title</li>
                    </ol>
                </nav>
                
                <h1>@Model.Topic.Title</h1>
                
                @if (!string.IsNullOrEmpty(Model.Topic.Description))
                {
                    <p class="topic-description">@Model.Topic.Description</p>
                }
                
                <div class="topic-meta">
                    <span class="author">
                        <i class="bi bi-person"></i> @Model.Topic.CreatedByName
                    </span>
                    <span class="date">
                        <i class="bi bi-calendar"></i> @Model.Topic.CreatedAt.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("ru-RU"))
                    </span>
                    <span class="stats">
                        <i class="bi bi-file-earmark-text"></i> @Model.Materials.Count материалов
                    </span>
                    <span class="stats">
                        <i class="bi bi-puzzle"></i> @Model.Exercises.Count упражнений
                    </span>
                </div>
            </div>
        </div>

        <!-- Прогресс изучения -->
        <div class="progress-section">
            <h3><i class="bi bi-graph-up"></i> Ваш прогресс</h3>
            <div class="progress-card">
                <div class="progress-info">
                    <span>Изучено материалов: <strong>0 из @Model.Materials.Count</strong></span>
                    <span>Выполнено упражнений: <strong>0 из @Model.Exercises.Count</strong></span>
                </div>
                <div class="progress-bar-container">
                    <div class="progress">
                        <div class="progress-bar" role="progressbar" style="width: 0%">0%</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Материалы -->
        <div class="content-section">
            <h3><i class="bi bi-file-earmark-text"></i> Материалы для изучения</h3>
            
            @if (Model.Materials.Any())
            {
                <div class="materials-list student-materials">
                    @foreach (var material in Model.Materials.Where(m => m.IsPublic).OrderBy(m => m.Order))
                    {
                        <div class="material-item student-material" data-material-type="@material.MaterialType.ToString().ToLower()">
                            <div class="material-icon">
                                @switch (material.MaterialType)
                                {
                                    case MaterialType.Text:
                                        <i class="bi bi-file-text"></i>
                                        break;
                                    case MaterialType.Image:
                                        <i class="bi bi-image"></i>
                                        break;
                                    case MaterialType.Audio:
                                        <i class="bi bi-music-note"></i>
                                        break;
                                    case MaterialType.Video:
                                        <i class="bi bi-play-circle"></i>
                                        break;
                                }
                            </div>
                            <div class="material-content">
                                <h4>@material.Title</h4>
                                @if (!string.IsNullOrEmpty(material.Description))
                                {
                                    <p class="material-description">@material.Description</p>
                                }
                                <span class="material-type">@GetMaterialTypeText(material.MaterialType)</span>
                                
                                <!-- Превью материала -->
                                <div class="material-preview-student">
                                    @switch (material.MaterialType)
                                    {
                                        case MaterialType.Text:
                                            @if (!string.IsNullOrEmpty(material.Content))
                                            {
                                                <div class="text-preview-small">
                                                    @(material.Content.Length > 100 ? material.Content.Substring(0, 100) + "..." : material.Content)
                                                </div>
                                            }
                                            break;
                                        case MaterialType.Image:
                                            @if (!string.IsNullOrEmpty(material.FilePath))
                                            {
                                                <div class="image-preview-small">
                                                    <img src="@GetFileUrl(material.FilePath)" alt="@material.Title" />
                                                </div>
                                            }
                                            break;
                                        case MaterialType.Video:
                                            @if (!string.IsNullOrEmpty(material.ExternalUrl))
                                            {
                                                <div class="video-preview-small">
                                                    <i class="bi bi-play-circle"></i>
                                                    <span>Видео материал</span>
                                                </div>
                                            }
                                            break;
                                        case MaterialType.Audio:
                                            @if (!string.IsNullOrEmpty(material.FilePath))
                                            {
                                                <div class="audio-preview-small">
                                                    <i class="bi bi-music-note"></i>
                                                    <span>Аудио материал</span>
                                                </div>
                                            }
                                            break;
                                    }
                                </div>
                            </div>
                            <div class="material-actions">
                                <a href="/student/materials/@material.Id" class="btn btn-primary btn-sm">
                                    <i class="bi bi-play"></i> Изучить
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="bi bi-file-earmark-text"></i>
                    <p>Материалы пока не добавлены</p>
                </div>
            }
        </div>

        <!-- Упражнения -->
        <div class="content-section">
            <div class="section-header">
                <h3><i class="bi bi-puzzle"></i> Упражнения</h3>
                @if (Model.Exercises.Any())
                {
                    <a href="/student/topics/@Model.Topic?.Id/exercises" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-list"></i> Все упражнения
                    </a>
                }
            </div>
            
            @if (Model.Exercises.Any())
            {
                <div class="exercises-list">
                    @foreach (var exercise in Model.Exercises.OrderBy(e => e.Questions.Count > 0 ? e.Questions.Min(q => q.Order) : 0).Take(3))
                    {
                        <div class="exercise-item">
                            <div class="exercise-icon">
                                <i class="bi bi-puzzle"></i>
                            </div>
                            <div class="exercise-content">
                                <h4>@exercise.Title</h4>
                                @if (!string.IsNullOrEmpty(exercise.Description))
                                {
                                    <p class="exercise-description">@exercise.Description</p>
                                }
                                <div class="exercise-meta">
                                    <span class="exercise-type">
                                        <i class="bi bi-gear"></i> @GetExerciseTypeText(exercise.ExerciseType)
                                    </span>
                                    <span class="exercise-stats">
                                        <i class="bi bi-question-circle"></i> @exercise.Questions.Count вопросов
                                    </span>
                                    <span class="exercise-stats">
                                        <i class="bi bi-clock"></i> @exercise.TimeLimit мин
                                    </span>
                                </div>
                            </div>
                            <div class="exercise-actions">
                                <a href="/student/exercises/@exercise.Id/take" class="btn btn-success btn-sm">
                                    <i class="bi bi-play-circle"></i> Выполнить
                                </a>
                            </div>
                        </div>
                    }
                </div>
                
                @if (Model.Exercises.Count > 3)
                {
                    <div class="show-more">
                        <a href="/student/topics/@Model.Topic?.Id/exercises" class="btn btn-outline-primary">
                            <i class="bi bi-plus"></i> Показать все упражнения (@Model.Exercises.Count)
                        </a>
                    </div>
                }
            }
            else
            {
                <div class="empty-state">
                    <i class="bi bi-puzzle"></i>
                    <p>Упражнения пока не добавлены</p>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Загрузка...</span>
            </div>
            <p class="mt-3">Загрузка топика...</p>
        </div>
    }
</div>

@functions {
    string GetMaterialTypeText(MaterialType type)
    {
        return type switch
        {
            MaterialType.Text => "Текст",
            MaterialType.Image => "Изображение",
            MaterialType.Audio => "Аудио",
            MaterialType.Video => "Видео",
            _ => "Неизвестно"
        };
    }

    string GetFileUrl(string filePath)
    {
        var baseUrl = "http://localhost:5118";
        return $"{baseUrl}/{filePath}";
    }

    string GetExerciseTypeText(WordWisp.Web.Models.Enums.ExerciseType type)
    {
        return type switch
        {
            WordWisp.Web.Models.Enums.ExerciseType.MultipleChoice => "Множественный выбор",
            WordWisp.Web.Models.Enums.ExerciseType.FillInTheBlank => "Заполнить пропуски",
            WordWisp.Web.Models.Enums.ExerciseType.TrueFalse => "Верно/Неверно",
            WordWisp.Web.Models.Enums.ExerciseType.Matching => "Сопоставление",
            WordWisp.Web.Models.Enums.ExerciseType.Essay => "Эссе",
            _ => "Неизвестно"
        };
    }
}
